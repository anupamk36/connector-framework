from sqlalchemy import (
    Column,
    Integer,
    String,
    DateTime,
    Boolean,
    Float,
    ARRAY,
    JSON,
    Integer,
)
from sqlalchemy.dialects.postgresql import JSONB, UUID
from sqlalchemy.ext.declarative import declarative_base
from datetime import datetime

Base = declarative_base()


class VulnerabilityModel(Base):
    __tablename__ = "vulnerabilities"
    request_id = Column(Integer, autoincrement=True, primary_key=True, index=True)
    connection_id = Column(UUID(as_uuid=True))
    organization_id = Column(UUID(as_uuid=True))
    id = Column(UUID(as_uuid=True), index=True)
    device = Column(JSONB)
    name = Column(String)
    description = Column(String)
    scan_output = Column(String)
    cve = Column(ARRAY(String))
    cvss_version = Column(String)
    cvss_base_score = Column(Float)
    cvss_vector = Column(String)
    cvss_temporal_score = Column(Float)
    cvss_temporal_vector = Column(String)
    cert_id = Column(String)
    port = Column(Integer)
    protocol = Column(String)
    service = Column(String)
    severity = Column(String)
    first_seen = Column(DateTime)
    last_seen = Column(DateTime)
    state = Column(String)
    state_updated_at = Column(DateTime)
    patchable = Column(Boolean)
    solution = Column(String)
    category = Column(String)
    vendor = Column(String)
    vendor_id = Column(String)
    vendor_severity = Column(String)
    vendor_scan_id = Column(String)
    vendor_data = Column(JSONB)
    created_at = Column(DateTime, default=datetime.utcnow)
